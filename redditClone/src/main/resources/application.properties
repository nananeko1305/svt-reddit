spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Navodi se baza koja se koristi
spring.sql.init.platform=mysql

#/jpa - naziv seme
spring.datasource.url=jdbc:mysql://localhost:3306/jpa

#Kredencijali
spring.datasource.username=nananeko
spring.datasource.password=nananeko

#Umesto da sami pisemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako zelimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji ce Spring Boot automatski pokrenuti pri pokretanju aplikacije
#create-drop je default
spring.jpa.hibernate.ddl-auto = none

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#Pokretanje sql skripte - always
#Prvi put kad kreirate semu, zakomentarisati.
#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
#spring.sql.init.mode=always

#Hibernate optimizacija SQL upita za MySQL bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#https://vladmihalcea.com/the-open-session-in-view-anti-pattern/
spring.jpa.open-in-view=false

jwt.secret=user

elasticsearch.host=localhost
elasticsearch.port=9200
files.path = src/main/resources/files/
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB